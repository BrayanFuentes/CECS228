import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.ArrayList;

public class PicFrogs {
	
	public static void main(String[] args) throws FileNotFoundException
	{
		File inputFile = new File("input.txt");
		Scanner scn = new Scanner(inputFile);
		PrintWriter out = new PrintWriter("output.txt");
		int frogs = 0;
		int nums = 0;
		for(int o = 0; scn.hasNextInt() && o < 2; o++)
		{
			if(o == 0)
			{
				int temp = scn.nextInt();
				frogs = temp;
			}
			else
			{
				int temp = scn.nextInt();
				nums = temp;
				
			}
		}
		//System.out.println(frogs);	
		char[] signs = new char[] {'-','+','+','-','-','-','+','-'};
		/*while (scn.hasNext())
        {
           String str = scn.next(); 
            signs = str.toCharArray();
            
            // do something
        }
		*/
		int[] arr = new int[nums];		
		for(int i = 1; i < nums +1; i++)
		{
			arr[i-1] = i;
		}
		int swaps = 0;
		
		//System.out.println(Arrays.toString(arr));
		//counts how many swaps there are
		for(int i = 0; i < signs.length;i++)
		{
			if(i == signs.length - 1)
			{
				continue;
			}
			else 
			{
				if(signs[i] != signs[i+1])
				{
					swaps++;
				}
			}
		}
		
		int[] newarr = new int[nums]; 
		int [] idk = new int[nums];
		int counter = 0; 
		int counter1 = 0;
		for(int i = 0; i < nums; i++)
		{
			if(i == 0)
			{
				newarr[i] = swaps;
			}
			else if(i % 3 ==0)
			{
				counter++;
				newarr[i] = swaps - counter;
				
			}
			else
			{
				if(swaps + counter1 >= nums)
				{
					counter++;
					newarr[i] = swaps - counter;
				}
				else 
				{
					counter1++;
					newarr[i] = swaps + counter1;
				}
			}
		}
		//if at any point in the math part it equals 0 switch the signs
		System.out.println(Arrays.toString(newarr));
		int sum = 0;
		for(int i = 0; i < nums; i++)
		{
			if(i == 0)	
			{
				if(signs[i] == '+')
				{
					idk[i] = newarr[i];
					sum = idk[i];
				}
				else
				{
					idk[i] = newarr[i] *(-1);
					sum = idk[i];
				}
			}
			else if(i % 2 == 1 && i %3 !=0)
			{
				sum = getSum(sum,newarr,signs,idk,i);
				boolean temp = checkSum(sum,signs,i);
				while( temp == false)
				{
					if(signs[i] == '+')
					{
						idk[i] = newarr[i]*(-1);
						sum = idk[i] + sum;
					}
					else
					{
						idk[i] = newarr[i] *(1);
						sum = sum + idk[i];
					}
					temp = checkSum(sum,signs,i);
				}
				
			}
			else if( i % 2 ==0 && i != 0)
			{
				sum = getSum(sum,newarr,signs,idk,i);
				boolean temp = checkSum(sum,signs,i);
				while( temp == false)
				{
					if(signs[i] == '+')
					{
						idk[i] = newarr[i]*(-1);
						sum = idk[i] + sum;
					}
					else
					{
						idk[i] = newarr[i] *(1);
						sum = sum + idk[i];
					}
					temp = checkSum(sum,signs,i);
				}
			}
			else if(i %3 ==0)
			{
				idk[i]  = newarr[i] * (-1);
			}
		}
		System.out.println(Arrays.toString(idk));
		scn.close();
		out.close();
	}
	//arr is the newarr, newarr is idk and signs is signs
	public static int getSum(int sum , int arr[], char signs[], int newarr[],int index)
	{
		if(signs[index] == '+')
		{
			newarr[index] = arr[index];
			sum = newarr[index] + sum;
		}
		else
		{
			newarr[index] = arr[index] *(-1);
			sum = sum + newarr[index];
		}
		return sum;
	}
	public static boolean checkSum(int sum,char signs[],int index)
	{
		boolean decision = false;
		if(signs[index] == '+')
		{
			if(sum > 0)
			{
				decision = true;
			}
		}
		else if(signs[index] == '-')
		{
			if(sum < 0)
			{
				decision = true;
			}
		}
		return decision;
	}
}
// tHis cOdE sucKKKs with three K's for white supremacy

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
public class square
{
    public static void main(String[] args) throws FileNotFoundException
    {
        File inputFile = new File("input1.txt");
        Scanner scn = new Scanner(inputFile);
        scn.useDelimiter("\n");
        ArrayList<String> inputs = new ArrayList<String>();
        //makes sure that there is a next line to read. Then it takes each line to put them into an arraylist
        while(scn.hasNextLine())
        {
            String temp = scn.nextLine();
            inputs.add(temp);
        }
        //only needs to read first line to attain the int size
        ArrayList<Character> grid = new ArrayList<Character>();
        int size = inputs.size();
        char[][]arr = new char[size][size];
        //reads the each string in the arraylist and takes each character in all of the strings and puts them in another arraylist
        for(int i = 0; i < size; i++)
        {
            String temp = inputs.get(i);
            for (int r = 0; r < temp.length(); r++) 
            {
                grid.add(temp.charAt(r));
            }                
        }    
        
        //the count makes sure that the for loop will read the whole arrayList and put it in the 2 dimensional array
        int count = 0;
        for(int a = 0; a < size; a++ )
        {
            for(int b = 0 ; b < size;b++ )
            {
                arr[a][b] = grid.get(count);
                count++;
            }
        }
        
        // displays the 2 dimensional array
        /*for(int c = 0; c < size; c++)
        {
            for(int d = 0; d < size; d++)
            {
                System.out.print(arr[c][d] + " ");
                    
            }
            System.out.println();
        }
        */
        int biggest_area = 0;
        int area = 0;
        int[] cords = new int[] {0,0,0,0,0,0,0,0};
        //ArrayList<Integer> cords = new ArrayList<Integer>(Arrays.asList(0,0,0,0,0,0,0,0));
        //System.out.println(Arrays.toString(cords));
        for(int row = 0; row < size; row++ )
        {
        	for(int col = 0; col < size; col++)
        	{
        		if(arr[row][col] == 'A')
        		{       			
        			for(int i = col +1; i < size; i++)
        			{
        				if(arr[row][i] == 'A')
        				{
        					int dif = i - col;
        					//System.out.println(cords);       					
        					
        					if(row + dif < size) 
        					{
        						if((arr[row+dif][col] == 'A' || arr[row+dif][i] == 'A'))
            					{
            						if(arr[row+dif][col]=='A')
            						{
            							area = dif * dif;
                                        if(biggest_area <= area && (arr[row+dif][col] != 'B' && arr[row+dif][i] != 'A'))
                                        {
                                        	biggest_area = area;
                                        	cords[0] = row + 1;
                                        	cords[1] = col + 1;
                                        	cords[2] = row + 1;
                                        	cords[3] = i + 1;
                                        	cords[4] = row + dif + 1;
                                        	cords[5] = col + 1;
                                        	cords[6] = row + dif + 1;
                                        	cords[7] = i + 1;
                                        	/*cords.set(0,row+1);
                                        	cords.set(1,col+1);
                                        	cords.set(2,row+1);
                                        	cords.set(3,i+1);
                                        	cords.set(4,row + dif + 1);
                                        	cords.set(5,col+1);
                                        	cords.set(6,row + dif + 1);
                                        	cords.set(7,i+1);*/
                                        }
            						}
            						else if(arr[row+dif][i]=='A'  )
            						{
            							area = dif * dif;
                                        if(biggest_area < area && (arr[row + dif ][i] != 'B'&& arr[row + dif][col] != 'A'))
                                        {
                                        	biggest_area = area;
                                        	cords[0] = row + 1;
                                        	cords[1] = col + 1;
                                        	cords[2] = row + 1;
                                        	cords[3] = i + 1;
                                        	cords[4] = row + dif + 1;
                                        	cords[5] = col + 1;
                                        	cords[6] = row + dif + 1;
                                        	cords[7] = col + 1;
                                        	/*cords.set(0,row+1);
                                        	cords.set(1,col+1);
                                        	cords.set(2,row+1);
                                        	cords.set(3,i+1);
                                        	cords.set(4,row + dif + 1);
                                        	cords.set(5,col+1);
                                        	cords.set(6,row + dif + 1);
                                        	cords.set(7,col+1);*/
                                        }
            						}
            					}
        					}
        					
        					else if (row - dif >= 0)
        					{
        						if((arr[row-dif][col] == 'A' || arr[row-dif][i] == 'A'))
            					{
            						if(arr[row-dif][col] == 'A')
            						{
            							area = dif * dif;
                                        if(biggest_area < area && (arr[row-dif][col] != 'B' && arr[row - dif][i] != 'A'))
                                        {
                                        	biggest_area = area;
                                        	cords[0] = row + 1;
                                        	cords[1] = col + 1;
                                        	cords[2] = row + 1;
                                        	cords[3] = i + 1;
                                        	cords[4] = row - dif + 1;
                                        	cords[5] = col + 1;
                                        	cords[6] = row - dif + 1;
                                        	cords[7] = i + 1;
                                        	/*cords.set(0,row+1);
                                        	cords.set(1,col+1);
                                        	cords.set(2,row+1);
                                        	cords.set(3,i+1);
                                        	cords.set(4,row - dif + 1);
                                        	cords.set(5,col+1);
                                        	cords.set(6,row - dif + 1);
                                        	cords.set(7,i+1);*/
                                        }
            						}
            						else if(arr[row-dif][i] == 'A')
            						{
            							area = dif * dif;
                                        if(biggest_area < area && (arr[row -dif][i] != 'B' && arr[row -dif][col] != 'A'))
                                        {
                                        	biggest_area = area;
                                        	cords[0] = row + 1;
                                        	cords[1] = col + 1;
                                        	cords[2] = row + 1;
                                        	cords[3] = i + 1;
                                        	cords[4] = row - dif + 1;
                                        	cords[5] = col + 1;
                                        	cords[6] = row - dif + 1;
                                        	cords[7] = col + 1;
                                        	/*cords.set(0,row+1);
                                        	cords.set(1,col+1);
                                        	cords.set(2,row+1);
                                        	cords.set(3,i+1);
                                        	cords.set(4,row - dif + 1);
                                        	cords.set(5,col+1);
                                        	cords.set(6,row - dif + 1);
                                        	cords.set(7,col+1);*/
                                        	
                                        }
            						}
            					}
        					}
        				}
        			}
        		}
        	}
        }

    
                
        System.out.println(Arrays.toString(cords));
        scn.close();  
}
}
